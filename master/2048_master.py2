#import necessary libraries
import pygame
import time
import random


#initiate pygame
pygame.init()

#setup display window
(width,  height) = (445,  500)
screen = pygame.display.set_mode((width, height))
running = True

#set colour variables
white = (255,  255,  255)
black = (0,  0,  0)
grey = (128,  128,  128)

#give the display window a title
pygame.display.set_caption('shitty 2048')

#import necessary images
background = pygame.image.load('background.png')
two_tile = pygame.image.load('two_tile.png') 
four_tile =  pygame.image.load('four_tile.png')
eight_tile =  pygame.image.load('eight_tile.png')
twenty_fourty_eight_tile = pygame.image.load('twenty_fourty_eight_tile.png')

#now we will set up the arrays and strings needed for the game
coordinates = ['A1',  'A2', 'A3', 'A4', 'B1', 'B2',  'B3',  'B4', 'C1',  'C2', 'C3', 'C4', 'D1', 'D2', 'D3', 'D4']

A1 = '0'
B1 = '0'
C1 = '0'
D1 = '0'
A2 = '0'
B2 = '0'
C2 = '0'
D2 = '0'
A3 = '0'
B3 = '0'
C3 = '0'
D3 = '0'
A4 = '0'
B4 = '0'
C4 = '0'
D4 = '0'



#this function just pulls up the background image/the playboard
def draw_background():
    screen.blit(background,  (0, 0))
    pygame.display.flip()

def update_grid():
    print(A1 + ' ' + B1 + ' ' + C1 +  ' ' + D1 )
    print(A2 + ' ' + B2 + ' ' + C2 +  ' ' + D2 )
    print(A3 + ' ' + B3 + ' ' + C3 +  ' ' + D3 )
    print(A4 + ' ' + B4 + ' ' + C4 +  ' ' + D4 )
    
def spawn_tile():
    
    global A1  
    global B1  
    global C1  
    global D1  
    global A2  
    global B2  
    global C2  
    global D2  
    global A3  
    global B3  
    global C3  
    global D3  
    global A4  
    global B4  
    global C4  
    global D4  
    
    spawn_loops = 0
    while spawn_loops < 1:
        
        time.sleep(0.001)
        tile1 = random.choice(coordinates)
       
        ##tile2 = random.choice(coordinates)
        
        print(tile1)
        
        if tile1  == 'A1':
            tile_y_var = 70
            tile_x_var = 15
            A1 = '2'
        elif tile1 == 'B1':
            tile_y_var = 70
            tile_x_var = 120
            B1 = '2'
        elif tile1 == 'C1':
            tile_y_var = 70
            tile_x_var = 225
            C1 = '2'
        elif tile1 == 'D1':
            tile_y_var = 70
            tile_x_var = 330
            D1 = '2'
        
        
        if tile1 == 'A2':
            tile_x_var = 15
            tile_y_var = 175
            A2 = '2'
        elif tile1 == 'B2':
            tile_x_var = 120
            tile_y_var = 175
            B2 = '2'
        elif tile1 == 'C2':
            tile_x_var = 225
            tile_y_var = 175
            C2 = '2'
        elif tile1 == 'D2':
            tile_x_var = 330
            tile_y_var = 175
            D2 = '2'
        
        if tile1  == 'A3':
            tile_y_var = 280
            tile_x_var = 15
            A3 = '2'
        elif tile1 == 'B3':
            tile_y_var = 280
            tile_x_var = 120
            B3 = '2'
        elif tile1 == 'C3':
            tile_y_var = 280
            tile_x_var = 225
            C3 = '2'
        elif tile1 == 'D3':
            tile_y_var = 280
            tile_x_var = 330
            D3 = '2'
        
        
        if tile1  == 'A4':
            tile_x_var = 15
            tile_y_var = 385
            A4 = '2'
        elif tile1 == 'B4':
            tile_x_var = 120
            tile_y_var = 385
            B4 = '2'
        elif tile1 == 'C4':
            tile_x_var = 225
            tile_y_var = 385
            C4 = '2'
        elif tile1 == 'D4':
            tile_x_var = 330
            tile_y_var = 385
            D4 = '2'
        
        print(tile_x_var,  tile_y_var)
        
        def tile_two():
            screen.blit(two_tile,  (tile_x_var,  tile_y_var))
        def tile_four():
            screen.blit(four_tile,  (tile_x_var,  tile_y_var))
        two = tile_two()
        four = tile_four()
        
        random.sample([tile_two, ],1)[0]()
    
        pygame.display.flip()
        spawn_loops = spawn_loops +1
        
        update_grid()

def sense_key():
    global A1  
    global B1  
    global C1  
    global D1  
    global A2  
    global B2  
    global C2  
    global D2  
    global A3  
    global B3  
    global C3  
    global D3  
    global A4  
    global B4  
    global C4  
    global D4 
    events = pygame.event.get()
    events = pygame.event.get()
    for event in events:
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_DOWN or event.key == pygame.K_s:
                print('down')
                if A1 != '0':
                    if A2 == '0':
                        A2 = A1
                        A1 = '0'
                        update_grid()
                    else:
                        pass
                else:
                    pass
            elif event.key == pygame.K_RIGHT or event.key == pygame.K_d:
                print('right')
            elif event.key == pygame.K_LEFT or event.key == pygame.K_a:
                print('left')
            elif event.key == pygame.K_UP or event.key == pygame.K_w:
                print('up')

#MAIN PROGRAM BITS#
draw_background()    
time.sleep(0.001)
spawn_tile()
spawn_tile()
while running:
    sense_key()
    time.sleep(0.001)
    
    
    


    
